#!/bin/bash

alias pel="grc tail -f /var/log/apache2/error_log"
alias pal="grc tail -f /var/log/apache2/access_log"
alias jenkins="java -jar /usr/local/opt/jenkins/libexec/jenkins.war"
alias iphone="open /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app"
alias evimrc="vim ~/.vimrc"
alias egvimrc="vim ~/.gvimrc"
alias sshconf="vim ~/.ssh/config"
alias openports="lsof -i -P | grep LISTEN"
alias subl='/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl'
alias rtl='tail -f log/development.log'
alias bi="bundle install"
alias srails="bundle exec rails server"
alias be="bundle exec "
alias beers="bundle exec rails server"

alias cdd="cd ~/dotfiles"
alias cdp="cd ~/Projects"

# sudo easy_install Pygments
alias c='pygmentize -O style=monokai -f console256 -g'

alias dnet="traceroute 8.8.8.8"
alias checkip="wget -qO- http://icanhazip.com"
alias nv="nodenv"
alias nw="/Applications/node-webkit.app/Contents/MacOS/node-webkit"

# Extract archives - use: extract <file>
# Based on http://dotfiles.org/~pseup/.bashrc
function extract() {
	if [ -f "$1" ] ; then
		local filename=$(basename "$1")
		local foldername="${filename%%.*}"
		local fullpath=`perl -e 'use Cwd "abs_path";print abs_path(shift)' "$1"`
		local didfolderexist=false
		if [ -d "$foldername" ]; then
			didfolderexist=true
			read -p "$foldername already exists, do you want to overwrite it? (y/n) " -n 1
			echo
			if [[ $REPLY =~ ^[Nn]$ ]]; then
				return
			fi
		fi
		mkdir -p "$foldername" && cd "$foldername"
		case $1 in
			*.tar.bz2) tar xjf "$fullpath" ;;
			*.tar.gz) tar xzf "$fullpath" ;;
			*.tar.xz) tar Jxvf "$fullpath" ;;
			*.tar.Z) tar xzf "$fullpath" ;;
			*.tar) tar xf "$fullpath" ;;
			*.taz) tar xzf "$fullpath" ;;
			*.tb2) tar xjf "$fullpath" ;;
			*.tbz) tar xjf "$fullpath" ;;
			*.tbz2) tar xjf "$fullpath" ;;
			*.tgz) tar xzf "$fullpath" ;;
			*.txz) tar Jxvf "$fullpath" ;;
			*.zip) unzip "$fullpath" ;;
			*) echo "'$1' cannot be extracted via extract()" && cd .. && ! $didfolderexist && rm -r "$foldername" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

function genpasswd() {
	let passwordLength=${1:-48}
	openssl rand -base64 $passwordLength | cut -c 1-$passwordLength
}

